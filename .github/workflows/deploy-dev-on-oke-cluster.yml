# This is a basic workflow that is triggered on pull request at develop branch
name: Deploy Dev

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  push:
  pull_request:
    branches:
      - develop

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job
  dev-deploy-oke:
    if: github.event.pull_request.merged == true
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    env:
      OCI_CLI_USER: ${{ secrets.OCI_CLI_USER }}
      OCI_CLI_TENANCY: ${{ secrets.OCI_CLI_TENANCY }}
      OCI_CLI_FINGERPRINT: ${{ secrets.OCI_CLI_FINGERPRINT }}
      OCI_CLI_KEY_CONTENT: ${{ secrets.OCI_CLI_KEY_CONTENT }}
      OCI_CLI_REGION: ${{ secrets.OCI_CLI_REGION }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # ---------------------------------------------------
    # Preparamos el entorno
    # ---------------------------------------------------
    - name: Configurando Java JDK 17
      uses: actions/setup-java@v4.0.0
      with:
        # The Java version to set up. Takes a whole or semver Java version. See examples of supported syntax in README file
        java-version: 17
        distribution: corretto
    # ---------------------------------------------------
    - name: Configurando Docker QEMU
      uses: docker/setup-qemu-action@v3
    # ---------------------------------------------------
    - name: Configurando Docker BuildX
      uses: docker/setup-buildx-action@v3

    # ---------------------------------------------------
    # Clonamos el repositorio
    # ---------------------------------------------------
    - name: Clonar repo
      uses: actions/checkout@v4.1.1
      with:
        ref: main
    
    # ---------------------------------------------------
    # Compilamos y empaquetamos
    # ---------------------------------------------------
    - name: Compilar y empaquetar
      run: cd ./initial && mvn clean package -DskipTests=true
    
    # ---------------------------------------------------
    # Generamos la imagen para subir a Docker hub
    # ---------------------------------------------------
    #- name: Login to Docker Hub
    #  uses: docker/login-action@v3
    #  with:
    #    username: ${{ secrets.DOCKERHUB_USERNAME }}
    #    password: ${{ secrets.DOCKERHUB_TOKEN }}

    # ---------------------------------------------------
    # Creamos la imagen Docker
    # ---------------------------------------------------
    - name: Crear imagen Docker
      uses: docker/build-push-action@v5
      with:
        context: ./initial
        push: false
        load: true
        tags: netelparaguay/app-test:latest
    
    # ---------------------------------------------------
    # Iniciamos sesion en OCI
    # ---------------------------------------------------
    - name: Log into OCIR
      uses: oracle-actions/login-ocir@v1.2.1
      id: login-ocir
      with:
        auth_token: ${{ secrets.OCI_AUTH_TOKEN }}
    
    # ---------------------------------------------------
    # Crear y obtener datos de Repositorio de destino
    # ---------------------------------------------------
    - name: Crear/Obtener datos de Repositorio remoto
      uses: oracle-actions/get-ocir-repository@v1.2.1
      id: get-ocir-repository
      with:
        name: oci-cloud-native-mushop/app-test
        compartment: ${{ secrets.OCI_COMPARTMENT_OCID }}

    # ---------------------------------------------------
    # Etiquetamos y publicamos la imagen en el Repo OCI
    # ---------------------------------------------------
    - name: Etiquetar y publicar imagen
      id: tag-and-push-image
      run: |
        docker tag netelparaguay/app-test:latest ${{ steps.get-ocir-repository.outputs.repo_path }}:latest
        docker push ${{ steps.get-ocir-repository.outputs.repo_path }}:latest
    
    # ---------------------------------------------------
    # Instalamos y configuramos Kubectl
    # ---------------------------------------------------
    - name: Instalar y configurar Kubectl
      uses: oracle-actions/configure-kubectl-oke@v1.3.2
      id: test-configure-kubectl-oke-action
      with:
        cluster: ${{ secrets.OKE_CLUSTER_OCID }}
    
    # ---------------------------------------------------
    # Desplegamos nuestra imagen m√°s nueva
    # ---------------------------------------------------
    - name: Desplegar imagen
      run: |
        kubectl delete deployment app-test-deployment --ignore-not-found
        kubectl apply -f ./initial/deployment.yaml
